 Blogos News and views on languages and technology Menu Skip to content Home About The Localizers Best Friend: t() Leave a reply Im always on the lookout for software development solutions that are smart, disruptive, novel, and that challenge assumptions to solve a business problem. I recently attended an SF Globalization meetup event in San Francisco hosted by Airbnb . There, I saw localization (and UX) convention stood on its head by something anyone working in developer relations would be proud to evangelize about. It was a great event, dinner was provided for free, and I learned how Airbnb built international product. It was a  story told with honest and candid insight by a multi-skilled team. Very refreshing views were heard, far too many to go into now. The Airbnb engineering team used Rails , instrumenting a t() (translate) helper method as the foundation of an infrastructure to deliver quality translations. The responses to audience questions, especially to the one if Airbnb used a translation memory, We use a normal SQL database, made me smile. I was immediately reading up more about the Rails i18n module . The t() solution was built to meet a need and to suit the Airbnb business model. It handles plurals, context, locale changes, and so on. Heres the t() method process overview: t() method used to build the Airbnb translation tool Heres how the tool provides context for translators, using screen shots: Screen shot capture in tool for translator context Its good for handling singular and plural and other language semantics, too: Singular and plurals in t() And of course, where would user experience be without enabling locale specifics: t() handles locale differences, such as terminology differences. The event also revealed that Airbnb relied on community translation and Google Translat e as a bootstrap translation tool, thats another days blog. I am indebted to the Airbnb team for the use of these images here. I cannot share all the slides shown in the meetup, but you can read more about the  t() method and how it took Airbnb into the Japanese  market. If you see Airbnb on the agenda at localization or UX industry events, check it out. Inspiring stuff. And, they must be doing something right, as theyre poised to become the worlds biggest hotelier Language in Business , Personalization and Design , Translation Technology and tagged AirBnB , Context , language semantics , localization , Rails , SQL on February 15, 2014 by ultan .         Localization Unconference Canadian Edition 1 Reply Oleksandr Pysaryuk ( @alexpysaryuk ) shares the insights on the organization, takeaways, and people from the Localization Unconference in Toronto. And what might be next On a chilly Ontario morning of January 23, Achievers office in Liberty Village in Toronto welcomed 43 localization enthusiasts to the first ever Localization Unconference in Canada. Those other ICE (In Context Exact) Matches The rules were no prepared presentations, no selling and “ there is no spoon ”. We brought ideas and brainstormed, voted and discussed the usual suspects (machine translation, crowdsourcing, translation quality, localization and Agile), as well as new arrivals (developer tools for localization, distributed translation memories, identity theft in translation industry). Localization Unconference topics reflect the energy and enthusiasm for inquiry in the industry Some takeaways: Translators need context, just a different kind. Developers like to be world-class. Learn to speak developer language. Measure translation quality differently. Your localization and your Agile are unique to you. The unconference is keeping it pink and multilingual! I hear there might be the first unconference at the next OTTIAQ event in Montreal, in French. And one at Translation Forum Russia 2014 , in Russian. Special thanks to Teresa Marshall ( @pschesi ) for supporting the Localization Unconference in Canada and consulting the organizers. Get to know the Localization Unconference Toronto faces here: https://www.dropbox.com/sc/f6zmbo6yixbufp9/nn0O7N-Qo3 Language Industry News and Events , Localization Culture , Translation Technology and tagged Achievers , agile , Developers , localization , localization unconference , Montreal , quality , Toronto , translation , translation tools , XLIIFF on January 29, 2014 by ultan .         Transifex: A Language Developers Understand Leave a reply I’m hearing great things from software professionals about Transifex , a SaaS translation solution based in Silicon Valley.  As I work in user experience developer relations, I Skyped in Dimitris Glezos  ( @glezos ), Transifex founder and Chief Ninja, in Greece to find out more. Dimitris’s background is in software development, Transifex originating as an open source project. The passions and principles of the FOSS development community, collaborating on a cloud-based platform , remain true today. Transifex knows how developers work in the cloud, and provides a user experience that makes sense to a world of GitHub , PaaS , Python gettext , RESTful APIs , Ruby , SaaS, and so on. Transifex has even been referred to as the GitHub of software translation , which is some accolade in the development community! Transifex API enables integration of software development workflows and tools in the cloud. The Transifex user community now has more than 100,000 developers and translators , working together on over 10,000 projects . Transifex users range from well-known enterprises to tech startups and the open-source community. Transifex can quietly boast of a diverse portfolio of successful translation projects ranging from hundreds millions of words of online courseware to strings for wearables and apps. A testament that Transifex is not a “one size fits all” model, what is really staggering about such a breadth of achievements is that it happened without Transifex having a single sales person , or offering those LSP-style “services”. The Transifex platform is development friendly and flexible, tooling up small pockets of remote developers to build iterative, dynamic content using 24/7 workflows and lean software methodologies.  Exceling with the detection of string changes and merging, Transifex is easily integrated into development environments through an API and command line interface.  Transifex works upstream too, a string pseudo-translation capability enables developers to test their internationalization chops before starting translation. Transifex translators use a browser-based online editor . This user experience packs CAT capabilities , support for glossaries, collaborative tools, screenshot preview for context, and other cool features . Translation projects are overseen in a contemporary online dashboard experience (it’s translated, too). Transifex user dashboard view. The  editor supports the major file types (including XLIFF and TMX ), has built-in QA for code variables in strings, enables character limits to be set, handles singular and plural variants, and makes it easy for developers and translators to work together. Transifex online translation editor user interface. “It’s translation the way developers want it, or the way they would have built it themselves”, says Dimitris. Most large companies have figured out a translation process, but many now innovate rapidly with small teams using agile frameworks and don’t want to build their own translation infrastructure. Developers are busy people who like to be productive ,  solving code problems using smart reusable solutions, and don’t need extra work. “It isn’t easy to build a translation process”, says Dimitris, “Instead, Transifex is integrated into existing development tools and workflows”. The Transifex success is based on an understanding of developers and translators and how they work, keeping both these users at the center of the user experience. An easy to use solution that seamlessly matches development processes and work styles with a community of online translators generates a powerful networking effect of kudos from satisfied users, who share their positive experiences with others. “If developers love it, they talk about it!” says Dimitris. That’s the sort of organically-generated  customer experience that most can only aspire to, and money alone cannot buy. There are powerful lessons from Transifex  about how software development teams and translators can work well together, not least of which is “know your users”. The Transifex story continues to unfold, and you can find out more about building international products using a SaaS platform in the case studies on the Transifex website . If you have other examples of cloud-based integrations of translation and software development teams, please  share them in the comments. Language in Business , Personalization and Design , Translation Technology and tagged APIs , Cloud , Distruptor , Dmitris Glezos , GitHub , PaaS , Python , RESTful API , Ruby , SaaS , Startups , transifex on January 19, 2014 by ultan .         Working Out Context in the Enterprise: Localize That! I just came across an interesting terminology issue for enterprise applications user experience and localization, generally. What should we call the people in an organization who do the work of the business and rely on software to help them do so? Honest labor. But honestly, what to call the person doing it! Image sourced from WIkiPedia Commons and also in public domain. Take the English language term worker appearing in a software applications user interface (UI). That term doesnt work well for every organizations set up or localized well into every language either. In some contexts, worker  might mean someone who is involved in manual labor and is an individual contributor. It others it doesnt. Consider how that term worker be perceived by the manager of a team of people, or someone who performs work (actually, all workers use knowledge, so I always found that qualifier to be somewhat snotty)? Then, there are organizations that have corporate requirements  about how they refer to, and manage, their workers, referring to them as employees,   partners , or something else. So, how could worker be easily localized into other languages given the challenges with the English term in the first place! I have seen localization bugs being logged for the  term appearing in a localized UI. In some cases, that may be the case, but the cause, of course, could also be traced back to choice of English language source term and a lack of context or understanding about how it is used. Should we even bother with such a generic terms as worker , employee , partner , and so on, anyway? In a role-based access world of enterprise applications, perhaps job titles might be more suitable? But then, how would such an approach scale ? And, how could it account for an increasingly consumer-driven user experience of enterprise technology where notions of identifying and labelling different types of users doesnt apply. Then again, if its a role-based access implementation, then why bother mentioning someone by title in the UI and not just their profile s real name? Then, theres that term user ;  a term in wide use in the drug and software industry , but not elsewhere. What could user be replaced with? Customer ? Oh, lets not go there. Im confused enough! Ultimately, of course, this conundrum is really a question of context . Coming up with a common, generic term that suits every organization, with operations in many languages, and that spans all kinds of domains and expertise really is not possible. Mistranslations of course, can happen, and superior, generated context for translators to localize the source terms accurately will help alleviate problem that for sure. But, coming up with a source term that is broadly acceptable, applied sparsely in the UI, and easily adapted in context is the way to go. Enabling er, users, to change simply one term to another that suits  individual (through a personalization option) or organizational requirements (using a customization tool feature) seems a reasonable, consumer-driven approach that doesnt require an IT project or a translator to be on 24-hour standby either. One size doesnt fit all. Comments welcome. What do you call your workers or users ? Localization Culture , Personalization and Design , Translation Technology and tagged enterprise , language , localization , terminology , user , worker on December 26, 2013 by ultan .         Correct Youse of English: Your Personal Dialect Map is Here Thought I was done with regional English ? No chance. The Irish Times recently predicted that the phrase “ you guys” will soon be accepted as the new second-person plural pronoun in English . As a native Dubliner , I am very familiar with such evolution, the locals already having adopted “youse” and “yiz” as replacements for the pronoun. As pointed out by Frank McNally in the Irish Times article, you can also hear the use of “ye” in south and the west of Ireland, and “yousuns” in the north of the country. Now, the New York Times has gone one further and used such dialect variants as , ,  you guys and more, and lots of other regional phrases too, as a way to gives a clue as to where you might be from based on how you speak. Ultans personal dialect map (Visualization generation copyright of The New York Times) The newspaper has created an interactive visualization tool using heatmaps overlaid on a map of the United States of America generated from your answers to some dialect-driven questions. You, too, can now create your own personal dialect map . Its fun! Although its a U.S.-based map, I was amazed to see how many phrases I was using regularly, even from places I had never been to (sorry Newark / Paterson and  Yonkers ). Thats language evolution for youse. Try it yourself. Language in Business , Language in the News , Localization Culture , Personalization and Design , Translation Technology and tagged accent , dialect , Dictionary of American Regional English , regional English , Visualization on December 24, 2013 by ultan .         Post navigation Older posts Search for: Recent Posts The Localizers Best Friend: t() Localization Unconference Canadian Edition Transifex: A Language Developers Understand Working Out Context in the Enterprise: Localize That! Correct Youse of English: Your Personal Dialect Map is Here Recent Comments Donna Parrish on Localization Unconference Canadian Edition Ultan (Oracle Apps UX) on Working Out Context in the Enterprise: Localize That! Kirsty on Working Out Context in the Enterprise: Localize That! ultan on Working Out Context in the Enterprise: Localize That! Ultan on Working Out Context in the Enterprise: Localize That! MultiLingual Magazine MultiLingual Digital Free sample digital issue Archives Select Month February 2014 January 2014 December 2013 November 2013 October 2013 June 2013 January 2013 December 2012 November 2012 September 2012 July 2012 April 2012 March 2012 February 2012 January 2012 December 2011 October 2011 September 2011 August 2011 May 2011 April 2011 March 2011 January 2011 December 2010 November 2010 October 2010 September 2010 August 2010 July 2010 June 2010 May 2010 April 2010 March 2010 February 2010 January 2010 December 2009 October 2009 September 2009 August 2009 July 2009 June 2009 May 2009 April 2009 March 2009 February 2009 January 2009 December 2008 November 2008 October 2008 September 2008 August 2008 July 2008 June 2008 May 2008 April 2008 March 2008 February 2008 January 2008 December 2007 November 2007 October 2007 September 2007 August 2007 July 2007 June 2007 May 2007 April 2007 March 2007 February 2007 October 2006 September 2006 August 2006 July 2006 April 2006 March 2006 February 2006 January 2006 December 2005 November 2005 October 2005 September 2005 August 2005 July 2005 June 2005 May 2005 April 2005 March 2005 February 2005 January 2005 December 2004 November 2004 October 2004 September 2004 August 2004 July 2004 June 2004 May 2004 April 2004 Categories Language in Business Language in the News Language Industry News and Events Localization Culture Personalization and Design Translation Technology Uncategorized Blogroll Acclaro Blog Become a translator Beyond Words Global by Design LObservatoire de la traduction Larsen Globalization Blog Servizi Traduzioni Speaking for Translators without Borders Translation Guy Blog Feeds Posts RSS Posts RSS 2.0 Posts Atom Proudly powered by WordPress Social Widgets powered by AB-WebLog.com . 
