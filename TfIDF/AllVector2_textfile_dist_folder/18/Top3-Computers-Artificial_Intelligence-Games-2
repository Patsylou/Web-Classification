Amits A* Pages Red Blob Games Home Blog Links Twitter About The problem were trying to solve is to get a game object from the starting point to a goal. Pathfinding addresses the problem of finding a good path from the starting point to the goalâ€•avoiding obstacles, avoiding enemies, and minimizing costs (fuel, time, distance, equipment, money, etc.). Movement addresses the problem of taking a path and moving along it. Its possible to spend your efforts on only one of these. At one extreme, a sophisticated pathfinder coupled with a trivial movement algorithm would find a path when the object begins to move and the object would follow that path, oblivious to everything else. At the other extreme, a movement-only system would not look ahead to find a path (instead, the initial would be a straight line), but instead take one step at a time, considering the local environment at every point. Best results are achieved by using both pathfinding and movement algorithms. Pathfinding Introduction to A* Algorithms Dijkstras Algorithm and Best-First-Search The A* Algorithm Heuristics A*s Use of the Heuristic Speed or accuracy? Scale Exact heuristics Precomputed exact heuristic Linear exact heuristic Heuristics for grid maps Manhattan distance Diagonal distance Euclidean distance Euclidean distance, squared Multiple goals Breaking ties Implementation notes Sketch Connectivity Performance Source code and demos Demos Code Set representation Unsorted arrays or linked lists Sorted arrays Sorted linked lists Sorted skip lists Indexed arrays Hash tables Binary heaps Splay trees HOT queues Data Structure Comparison Hybrid representations Interaction with the game loop Early exit Interruptible algorithm Group movement Refinement Variants of A* Beam search Iterative deepening Dynamic weighting Bandwidth search Bidirectional search Dynamic A* and Lifelong Planning A* Jump Point Search Theta* Dealing with moving obstacles Recalculating paths Path splicing Watching for map changes Predicting obstacle movement Space used by precalculated paths Locations vs. directions Path compression Location storage Direction storage Computed waypoints Limited path length Summary Other topics There are many other topics related to pathfinding. Map representations Grids Tile movement Edge movement Vertex movement Polygonal maps Managing complexity Navigation Meshes Polygon movement Polygon edge movement Polygon vertex movement Hybrid movement Path smoothing Hierarchical Wraparound maps Connected Components Road maps Skip links Waypoints Graph Format Recommendations Long and short term goals Unit movement Behavior flags or stacks Waiting for movement Coordinated movement Movement costs for pathfinders Altitude Moving uphill Moving up- or downhill Terrain Forests, mountains, and hills Roads Walls or other barriers Sloped Land Enemies and friendly units Marked beacons Fuel consumption User experience with shortest paths Dumb movement Smart movement Multithreading Multiple units Multiple waypoints Applications Exploration Spying Road building Terrain analysis City building AI techniques Neural Networks Genetic Algorithms Reinforcement Learning References Next: Introduction to A* redblobgames@gmail.com @redblobgames View the discussion thread. Amit Patel Red Blob Games Last modified: Mon Feb 10 21:23:46 2014 
