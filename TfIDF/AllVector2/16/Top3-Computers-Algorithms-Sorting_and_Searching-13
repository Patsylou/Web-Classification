 ANSI C implementation of a Suffix Tree What you will find in this page The Suffix Tree data structure [1] Definition A suffix tree T for an m -character string S is a rooted directed tree with exactly m leaves numbered 1 to m . Each internal node, other than the root, has at least two children and each edge is labeled with a nonempty substring of S . No two edges out of a node can have edge-labels beginning with the same character. The key feature of the suffix tree is that for any leaf i , the concatenation of the edge-labels on the path from the root to leaf i exactly spells out the suffix of S that starts at position i . That is, it spells out S [ i .. m Authors and maintainers Shlomo Yona Offer Kaye TODO Compilation make Makefile Files Project report summary README The original project report Dotan wrote project_report.rtf The header file suffix_tree.h The implementation file suffix_tree.c A simple example of using the code as through the interface as_is_example.c A main.c for the Makefile: main.c The Makefile Makefile suffix_tree.tar.gz SuffixTree-0.03 POD SuffixTree-0.03.tar.gz SuffixTree-0.02.tar.gz SuffixTree-0.01.tar.gz here here click here to read Belorussian translation (provided by Webhostingrating License References Shlomo Yona 
